{"version":3,"file":"AlbumViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/AlbumViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,gDAAqD;AACrD,0CAA2C;AAC3C,oFAAsF;AAItF,+EAAgD;AAChD,6CAA0C;AAC1C,8DAAsC;AACtC,mEAA+D;AAY/D,MAAM,gBAAiB,SAAQ,+BAAgC;IAE7D,KAAK,CAAC,MAAM;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAE9B,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAE/D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC7C,gBAAgB,CAAC,KAAK,GAAG,yBAAQ,CAAC,cAAc,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;SACjF;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACvD,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAC3C,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAuB,CAAC;QAEjF,IAAI,MAAM,CAAC,cAAc,EAAE;YACzB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACtE,MAAM,SAAS,GAAc;oBAC3B,IAAI,EAAE,QAAQ;oBACd,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB,CAAC;gBACF,MAAM,OAAO,GAAG,YAAY,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,oBAAU,CAAC,2BAA2B,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC5G,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;aACjD;iBACI;gBACH,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;gBAC7D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;aACrD;SACF;QAED,KAAK,CAAC,IAAI,CAAC;YACT,kBAAkB,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC,CAAC,CAAC,CAAE,MAAM,CAAE;YAC1E,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QAEH,IAAI,MAAM,CAAC;QACX,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACvC,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,MAAM,CAAC,CAAC;YACpD,IAAI,UAAU,CAAC;YACf,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,UAAU,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzD;iBACI,IAAI,IAAI,CAAC,aAAa,EAAE;gBAC3B,UAAU,GAAG,MAAM,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACnE;YACD,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SAC7F;aACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,UAAU,GAAG,MAAM,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3D,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SAC5F;QAED,MAAM,YAAY,GAAyB;YACzC,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO;aACb;YACD,IAAI,EAAE,MAAM,IAAI,SAAS;YACzB,KAAK;SACN,CAAC;QAEF,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACvC;QAED,OAAO;YACL,UAAU,EAAE,YAAY;SACzB,CAAC;IACJ,CAAC;IAES,uBAAuB;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC7F,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,QAAQ,CAAC;QAC9E,MAAM,WAAW,GAAG,CAAE,wBAAU,CAAC,IAAI,EAAE,wBAAU,CAAC,EAAE,EAAE,wBAAU,CAAC,MAAM,CAAE,CAAC;QAC1E,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,0BAA0B;YAC5C,WAAW,CAAC,IAAI,CAAC,wBAAU,CAAC,IAAI,CAAC,CAAC;SACnC;aACI;YACH,WAAW,CAAC,IAAI,CAAC,wBAAU,CAAC,KAAK,EAAE,wBAAU,CAAC,IAAI,CAAC,CAAC;SACrD;QAED,OAAO;YACL,WAAW;YACX,cAAc;YACd,WAAW;SACZ,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,MAAM,UAAU,GAAG,yBAAQ,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC7D,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC;QAChD,MAAM,MAAM,GAAW,EAAE,CAAC;QAE1B,MAAM,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAC/E,qBAAqB,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,4BAA4B;QAE9D,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC;QACnC,OAAO,UAAU,GAAG,GAAG,EAAE;YACvB,aAAa;YACb,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAEjE,kFAAkF;YAClF,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChC,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC/D,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC5B,UAAU,EAAE,CAAC;gBACb,IAAI,MAAM,CAAC,MAAM,IAAI,UAAU,EAAE;oBAC/B,MAAM;iBACP;aACF;YAED,uEAAuE;YACvE,IAAI,MAAM,CAAC,MAAM,IAAI,UAAU,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;gBACzD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC1B,MAAM;aACP;YAED,qBAAqB,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC;YACzD,UAAU,EAAE,CAAC;SACd;QAED,yBAAQ,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,sDAAsD,MAAM,CAAC,MAAM,eAAe,UAAU,UAAU,CAAC,CAAC;QAElI,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAED,kBAAe,IAAA,uBAAU,EAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import { EntityType, Song } from '../../../entities';\nimport { ModelType } from '../../../model';\nimport FilterableViewHandler, { FilterableViewConfig } from './FilterableViewHandler';\nimport { RenderedListItem } from './renderer/BaseRenderer';\nimport View from './View';\nimport { RenderedPage, RenderedPageContents } from './ViewHandler';\nimport jellyfin from '../../../JellyfinContext';\nimport { Explodable } from './Explodable';\nimport ViewHelper from './ViewHelper';\nimport { FilterType } from '../../../model/filter/FilterModel';\n\nexport interface AlbumView extends View {\n  name: 'albums';\n  parentId?: string;\n  artistId?: string;\n  albumArtistId?: string;\n  search?: string;\n  genreId?: string;\n  collatedSearchResults?: '1';\n}\n\nclass AlbumViewHandler extends FilterableViewHandler<AlbumView> {\n\n  async browse(): Promise<RenderedPage> {\n    const prevUri = this.constructPrevUri();\n    const view = this.currentView;\n\n    const { lists, modelQueryParams } = await this.handleFilters();\n\n    if (view.search && view.collatedSearchResults) {\n      modelQueryParams.limit = jellyfin.getConfigValue('searchAlbumsResultCount', 11);\n    }\n\n    const model = this.getModel(ModelType.Album);\n    const renderer = this.getRenderer(EntityType.Album);\n    const albums = await model.getAlbums(modelQueryParams);\n    const listItems = albums.items.map((album) =>\n      renderer.renderToListItem(album)).filter((item) => item) as RenderedListItem[];\n\n    if (albums.nextStartIndex) {\n      if (view.search && view.collatedSearchResults && this.serverConnection) {\n        const albumView: AlbumView = {\n          name: 'albums',\n          search: view.search\n        };\n        const moreUri = `jellyfin/${this.serverConnection.id}/${ViewHelper.constructUriSegmentFromView(albumView)}`;\n        listItems.push(this.constructMoreItem(moreUri));\n      }\n      else {\n        const nextUri = this.constructNextUri(albums.nextStartIndex);\n        listItems.push(this.constructNextPageItem(nextUri));\n      }\n    }\n\n    lists.push({\n      availableListViews: listItems.length > 0 ? [ 'list', 'grid' ] : [ 'list' ],\n      items: listItems\n    });\n\n    let header;\n    if (view.artistId || view.albumArtistId) {\n      const artistModel = this.getModel(ModelType.Artist);\n      let headerData;\n      if (view.artistId) {\n        headerData = await artistModel.getArtist(view.artistId);\n      }\n      else if (view.albumArtistId) {\n        headerData = await artistModel.getAlbumArtist(view.albumArtistId);\n      }\n      header = headerData ? this.getRenderer(EntityType.Artist).renderToHeader(headerData) : null;\n    }\n    else if (view.genreId) {\n      const genreModel = this.getModel(ModelType.Genre);\n      const headerData = await genreModel.getGenre(view.genreId);\n      header = headerData ? this.getRenderer(EntityType.Genre).renderToHeader(headerData) : null;\n    }\n\n    const pageContents: RenderedPageContents = {\n      prev: {\n        uri: prevUri\n      },\n      info: header || undefined,\n      lists\n    };\n\n    if (!header) {\n      await this.setPageTitle(pageContents);\n    }\n\n    return {\n      navigation: pageContents\n    };\n  }\n\n  protected getFilterableViewConfig(): FilterableViewConfig {\n    const view = this.currentView;\n    const showFilters = !view.fixedView && !view.search && !view.artistId && !view.albumArtistId;\n    const saveFiltersKey = view.genreId ? 'genreAlbum' : `${view.parentId}.album`;\n    const filterTypes = [ FilterType.Sort, FilterType.AZ, FilterType.Filter ];\n    if (view.genreId) { // Coming from Genres view\n      filterTypes.push(FilterType.Year);\n    }\n    else {\n      filterTypes.push(FilterType.Genre, FilterType.Year);\n    }\n\n    return {\n      showFilters,\n      saveFiltersKey,\n      filterTypes\n    };\n  }\n\n  async getSongsOnExplode(): Promise<Song[]> {\n    const trackLimit = jellyfin.getConfigValue('maxTracks', 100);\n    const albumModel = this.getModel(ModelType.Album);\n    const songModel = this.getModel(ModelType.Song);\n    const result: Song[] = [];\n\n    const { modelQueryParams: albumModelQueryParams } = await this.handleFilters();\n    albumModelQueryParams.limit = 50; // Fetch 50 albums at a time\n\n    let iterations = 0, albumCount = 0;\n    while (iterations < 500) {\n      // Get albums\n      const albums = await albumModel.getAlbums(albumModelQueryParams);\n\n      // Fetch songs in each album and add to result (break when track limit is reached)\n      for (const album of albums.items) {\n        const songs = await songModel.getSongs({ parentId: album.id });\n        result.push(...songs.items);\n        albumCount++;\n        if (result.length >= trackLimit) {\n          break;\n        }\n      }\n\n      // Stop iteration if track limit is reached or no more albums available\n      if (result.length >= trackLimit || !albums.nextStartIndex) {\n        result.splice(trackLimit);\n        break;\n      }\n\n      albumModelQueryParams.startIndex = albums.nextStartIndex;\n      iterations++;\n    }\n\n    jellyfin.getLogger().info(`[jellyfin-view-album] getSongsOnExplode(): Fetched ${result.length} songs from ${albumCount} albums.`);\n\n    return result;\n  }\n}\n\nexport default Explodable(AlbumViewHandler);\n"]}