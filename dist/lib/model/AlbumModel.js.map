{"version":3,"file":"AlbumModel.js","sourceRoot":"","sources":["../../../src/lib/model/AlbumModel.ts"],"names":[],"mappings":";;;;;AAAA,0CAAyC;AAEzC,4DAAwE;AACxE,uEAA+C;AAE/C,MAAqB,UAAW,SAAQ,mBAAS;IAE/C,SAAS,CAAC,MAAsB;QAC9B,MAAM,MAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,eAAe,CAAQ,EAAE,GAAG,MAAM,EAAE,SAAS,EAAE,qBAAU,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;IACzF,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,MAAM,MAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;CACF;AAXD,6BAWC","sourcesContent":["import { EntityType } from '../entities';\nimport Album from '../entities/Album';\nimport BaseModel, { GetItemsParams, GetItemsResult } from './BaseModel';\nimport AlbumParser from './parser/AlbumParser';\n\nexport default class AlbumModel extends BaseModel {\n\n  getAlbums(params: GetItemsParams): Promise<GetItemsResult<Album>> {\n    const parser = new AlbumParser();\n    return this.getItemsFromAPI<Album>({ ...params, itemTypes: EntityType.Album }, parser);\n  }\n\n  getAlbum(id: string) {\n    const parser = new AlbumParser();\n    return this.getItemFromApi({ itemId: id }, parser);\n  }\n}\n"]}